@using DRR_PAGE_BLAZOR.Services
@using DRR_PAGE_BLAZOR.Models
@using System.Text.Json
@inject IJSRuntime JS

@page "/empresa"  
@inject EmpresaService EmpresaService  

<h3 style="margin-top:300px">Empresa</h3>

@if (empresa is null)  
{  
    <p>Cargando datos...</p>  
}  
else  
{
    <p><strong>Razón social:</strong> @empresa.RazonSocial</p>
    @* <p><strong>Ruc:</strong> @empresa.Ruc</p> *@
    <p><strong>Email:</strong> @empresa.E_Mail</p>
    <p><strong>Telefono:</strong> @empresa.telefono</p>

    @if (!string.IsNullOrWhiteSpace(empresa.Logo))
    {
        <p><strong>Logo:</strong></p>
        <img src="data:image/png;base64,@empresa.Logo" alt="Logo de la empresa" style="max-width:300px"/>
    }
}  

@code {  
    private DRR_PAGE_BLAZOR.Models.Empresa? empresa;  

    protected override async Task OnInitializedAsync()  
    {  
        try
        {
            empresa = await EmpresaService.ObtenerEmpresaAsync();

            if (empresa == null)
            {
                await JS.InvokeVoidAsync("console.log", "Datos no encontrado.");
            }
            else
            {
                // await JS.InvokeVoidAsync("console.log", "Mostrando datos de BD - Sector de Empresa:", JsonSerializer.Serialize(empresa, new JsonSerializerOptions
                // {
                //     WriteIndented = true
                // }));
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("console.error", "Error al obtener datos:", ex.Message);
        }
    }


}