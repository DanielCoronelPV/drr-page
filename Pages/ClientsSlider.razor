@implements IDisposable
@inject IJSRuntime JS

<section class="clients-slider" @ref="SliderSection">
    <div class="slider-header">
        <h2>Nuestros clientes</h2>
        <div class="divider" data-aos="fade-up" data-aos-duration="1000"></div>
        <p>Empresas líderes que confían en nuestros servicios para impulsar su crecimiento</p>
    </div>

    <div class="slider-wrapper">
        <button class="nav-btn prev-btn" @onclick="ScrollPrev">‹</button>
        <div class="slides-container" @ref="SlidesContainer">
            @foreach (var client in Clients)
            {
                <div class="slide">
                    <div class="card">
                        <div class="img-wrapper">
                            <img src="@client.Image" alt="@($"{client.Name} building")" />
                        </div>
                        <div class="overlay">
                            <h3>@client.Name</h3>
                            <p>@client.Industry</p>
                        </div>
                    </div>
                </div>
            }
        </div>
        <button class="nav-btn next-btn" @onclick="ScrollNext">›</button>
    </div>
</section>

@code {
    private ElementReference SliderSection;
    private ElementReference SlidesContainer;
    private DotNetObjectReference<ClientsSlider>? selfRef;
    private Timer? AutoplayTimer;

    private readonly int SlideWidth = 310;

    private class Client { public string Name, Image, Industry; }
    private List<Client> Clients = new()
    {
        new() { Name="Hut Forestales", Image="assets/img/clientsSlider/Client1.webp", Industry="Productos forestales" },
        new() { Name="Papelera Mercedes", Image="assets/img/clientsSlider/Client2.webp", Industry="Papelera" },
        new() { Name="Macovalle S.A.", Image="assets/img/clientsSlider/Client3.webp", Industry="Ferretería" },
        new() { Name="Total Agroinsumos S.A.S.", Image="assets/img/clientsSlider/Client4.webp", Industry="Agropecuaria" },
        new() { Name="Supermercado Los 5 hermanos", Image="assets/img/clientsSlider/Client5.webp", Industry="Supermercado" },
        new() { Name="Hotel Austral", Image="assets/img/clientsSlider/Client6.webp", Industry="Hoteleria" },
        new() { Name="Farma Store", Image="assets/img/clientsSlider/Client7.webp", Industry="Tiendas y Bazares" },
        new() { Name="Transmisiones Janssen", Image="assets/img/clientsSlider/Client8.webp", Industry="Repuestos" },
        new() { Name="Metalúrgica Waidelich", Image="assets/img/clientsSlider/Client9.webp", Industry="Metalúrgica" },
        new() { Name="Lubricantes Dorocz", Image="assets/img/clientsSlider/Client10.webp", Industry="Lubricentro" }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            selfRef = DotNetObjectReference.Create(this);
            await JS.InvokeVoidAsync("clientsSlider.initDrag", SlidesContainer);

            AutoplayTimer = new Timer(_ => InvokeAsync(ScrollNext), null, 4000, 4000);
        }
    }

    private async Task ScrollPrev()
    {
        await JS.InvokeVoidAsync("clientsSlider.scroll", SlidesContainer, -SlideWidth);
    }

    private async Task ScrollNext()
    {
        await JS.InvokeVoidAsync("clientsSlider.scroll", SlidesContainer, SlideWidth);
    }

    public void Dispose()
    {
        AutoplayTimer?.Dispose();
        selfRef?.Dispose();
    }
}